{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Test\"\nauthor: \"Travis Barrick\"\ndate: \"December 7, 2016\"\noutput: ioslides_presentation\nruntime: shiny\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n## Shiny Presentation\n\nThis R Markdown presentation is made interactive using Shiny. The viewers of the presentation can change the assumptions underlying whats presented and see the results immediately. \n\nTo learn more, see [Interactive Documents](http://rmarkdown.rstudio.com/authoring_shiny.html).\n\n## Interactive Plot\n\n```{r eruptions}\nlibrary(readr)\nif (!require(shiny)) install.packages(\"shiny\")\nif (!require(ggplot2)) install.packages(\"ggplot2\")\nif (!require(dplyr)) install.packages(\"dplyr\")\nif (!require(plotly)) install.packages(\"plotly\")\nif (!require(leaflet)) install.packages(\"leaflet\")\nif (!require(htmltools)) install.packages(\"htmltools\")\nif (!require(DT)) install.packages(\"DT\")\nif (!require(stringr)) install.packages(\"stringr\")\nif (!require(ggmap)) install.packages(\"ggmap\")\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(leaflet)\nlibrary(htmltools)\nlibrary(DT)\nlibrary(stringr)\nlibrary(ggmap)\n\n##### Data Import #####\nhealthcare <- read_csv(\"Healthcare_Data.csv\")\nzip<-read_csv(\"zipcode.csv\")\npopulation <- read_csv(\"2010_Census_Population.csv\")\nDRG_categories <- read_csv(\"Diagnosis_Category2.csv\")\nCOLA <- read_csv(\"COLA by State.csv\")\nstatesplus <- read.csv(\"http://www.hofroe.net/data/statesplus.csv\")\ngeneral_info <- read_csv(\"Hospital_General_Information.csv\")[c(1,9:11,13)]\ngeneral_info$`Provider ID` <- substr(general_info$`Provider ID`,regexpr(\"[^0]\",general_info$`Provider ID`),nchar(general_info$`Provider ID`)) ##removes leading zero's from Provider ID so merge works\n\n#### Merge datatsets together ####\nAnalysis_Dataset <- merge(healthcare, zip, by.x = \"ProviderZipCode\", by.y = \"zip\")\nAnalysis_Dataset <- merge(Analysis_Dataset, population, by.x = \"ProviderZipCode\", by.y = \"Zip_Code\")\nAnalysis_Dataset <- merge(Analysis_Dataset, DRG_categories, by.x = \"DRGDefinition\", by.y = \"DRGDefinition\")\nAnalysis_Dataset <- merge(Analysis_Dataset, general_info, by.x = \"ProviderId\", by.y = \"Provider ID\")\nAnalysis_Dataset <- merge(Analysis_Dataset, COLA, by.x = \"ProviderState\", by.y = \"State\")\n\n### Create new variables  ###\nAnalysis_Dataset$TreatmentCost = Analysis_Dataset$AverageTotalPayments + Analysis_Dataset$AverageCoveredCharges\nAnalysis_Dataset$Is_Iowa <- Analysis_Dataset$ProviderState ==  \"IA\"\n\n#### Adjust new variables ####\nAnalysis_Dataset$Category<-as.factor(Analysis_Dataset$Category)\n\n\n#### Graph 1 uses Analysis_Dataset ####\n\n#### Graph 2 #####\nAverageCategory<-Analysis_Dataset %>% group_by(Category,ProviderState,Name,ProviderName,ProviderStreetAddress,ProviderCity,latitude,longitude,Rating) %>% \n  summarise(AverageCost=mean(TreatmentCost)) %>% \n  arrange(AverageCost)\n\nAverageCategory$Name<-str_to_title(AverageCategory$Name)\nAverageCategory$ProviderName<-str_to_title(AverageCategory$ProviderName)\nAverageCategory$ProviderCity<-str_to_title(AverageCategory$ProviderCity)\n \n##### Graph 3 (both tabs) #####\n### Tab 1\nCOLA_Avg_Cost_by_Category  <- \n  Analysis_Dataset %>% group_by(Category, ProviderState, Name, Index, Rank) %>%\n  summarise(\n    avg_cost = mean(TreatmentCost)) \n\nCOLA_Avg_Cost_by_Category$COLA_avg_cost <- COLA_Avg_Cost_by_Category$avg_cost * COLA_Avg_Cost_by_Category$Index / 100\n\nIA_Avg_Cost_by_Category <-\n  COLA_Avg_Cost_by_Category %>% \n  filter(ProviderState == \"IA\") %>% ungroup() %>%\n  select(Category,ProviderState,avg_cost)\n\ncolnames(IA_Avg_Cost_by_Category)[1] <- \"IACompCategory\"\ncolnames(IA_Avg_Cost_by_Category)[2] <- \"IACompState\"\ncolnames(IA_Avg_Cost_by_Category)[3] <- \"IACompCost\"\n\n\nCOLA_Mid_Point_Analysis_Table <- merge(IA_Avg_Cost_by_Category, COLA_Avg_Cost_by_Category, by.x = \"IACompCategory\", by.y = \"Category\")\nCOLA_Mid_Point_Analysis_Table$Mean_Cost_Difference_to_Iowa <- COLA_Mid_Point_Analysis_Table$COLA_avg_cost - COLA_Mid_Point_Analysis_Table$IACompCost   \nCOLA_Mid_Point_Analysis_Table$Mean_Cost_Percentage_Difference_to_Iowa <- ((COLA_Mid_Point_Analysis_Table$COLA_avg_cost - COLA_Mid_Point_Analysis_Table$IACompCost)/COLA_Mid_Point_Analysis_Table$IACompCost)*100\n\ncolnames(COLA_Mid_Point_Analysis_Table)[1] <- \"Category\"\ncolnames(COLA_Mid_Point_Analysis_Table)[2] <- \"State\"\n\nstates<-map_data(\"state\")\nmapstates<-merge(statesplus,COLA_Mid_Point_Analysis_Table,by.x =\"region\", by.y =\"Name\")\n\n#### Tab 2\nAll_State_Midpoint_Table <- COLA_Avg_Cost_by_Category[c(1,2,6)]\nIowa_Midpoint_Table <- IA_Avg_Cost_by_Category\n\ncolnames(Iowa_Midpoint_Table)[3] <- \"Iowa_Mean_Treatment_Cost\"\ncolnames(Iowa_Midpoint_Table)[2] <- \"State\"\ncolnames(All_State_Midpoint_Table)[3] <- \"Average_Treatment_Cost\"\n\nMid_Point_Analysis_Table <- merge(All_State_Midpoint_Table, Iowa_Midpoint_Table, by.x = \"Category\", by.y = \"IACompCategory\")\n\nMid_Point_Analysis_Table$Mean_Cost_Difference_to_Iowa <- Mid_Point_Analysis_Table$Average_Treatment_Cost - Mid_Point_Analysis_Table$Iowa_Mean_Treatment_Cost\n\nMid_Point_Analysis_Table$Mean_Cost_Percentage_Difference_to_Iowa <- ((Mid_Point_Analysis_Table$Average_Treatment_Cost - Mid_Point_Analysis_Table$Iowa_Mean_Treatment_Cost)/Mid_Point_Analysis_Table$Iowa_Mean_Treatment_Cost) * 100\n\n\nMid_Point_Analysis_Table <-\n  Mid_Point_Analysis_Table %>%\n  select(Category,ProviderState,Mean_Cost_Difference_to_Iowa, Mean_Cost_Percentage_Difference_to_Iowa)\n\n\nsecondmap<-merge(Mid_Point_Analysis_Table,COLA[1:2],by.x=\"ProviderState\",by.y=\"State\")\nmapstates2<-merge(statesplus,secondmap,by.x =\"region\", by.y =\"Name\")\n```\n\n## Bullets\n\n- Bullet 1\n- Bullet 2\n- Bullet 3\n\n## R Output\n\n```{r cars}\nui <- fluidPage(\n  sidebarLayout(\n    sidebarPanel(\n      HTML(\"Hover over points for information\"),\n      selectInput(\"State\", \"Select States\", \n                  choices=c(\"AK\"\t,\"AL\"\t,\"AR\"\t,\"AZ\"\t,\"CA\"\t,\"CO\"\t,\"CT\"\t,\"DC\"\t,\"DE\"\t,\"FL\"\t,\"GA\"\t,\"HI\"\t,\"IA\"\t,\"ID\"\t,\"IL\"\t,\"IN\"\t,\"KS\"\t,\"KY\"\t,\"LA\"\t,\"MA\"\t,\"MD\"\t,\"ME\"\t,\"MI\"\t,\"MN\"\t,\"MO\"\t,\"MS\"\t,\"MT\"\t,\"NC\"\t,\"ND\"\t,\"NE\"\t,\"NH\"\t,\"NJ\"\t,\"NM\"\t,\"NV\"\t,\"NY\"\t,\"OH\"\t,\"OK\"\t,\"OR\"\t,\"PA\"\t,\"RI\"\t,\"SC\"\t,\"SD\"\t,\"TN\"\t,\"TX\"\t,\"UT\"\t,\"VA\"\t,\"VT\"\t,\"WA\"\t,\"WI\"\t,\"WV\"\t,\"WY\"\n                  ),\n                  selected=\"IA\", \n                  multiple=FALSE),\n      width = 3\n    ),\n    \n    mainPanel(\n      \n      # this is an extra div used ONLY to create positioned ancestor for tooltip\n      # we don't change its position\n     \n        plotlyOutput(\"scatterplot\"),\n     \n\n      width = 8\n    )\n  )\n)\nserver <- function(input, output,session) {\n\n  \n  output$scatterplot <- renderPlotly({\n    m<-Analysis_Dataset %>%\n      filter(ProviderState==input$State)%>%\n      group_by(ProviderState,ProviderName,Category) %>%\n      summarize(NumberofPatients = sum(TotalDischarges))\n    \n    gg<-ggplotly(ggplot(m,aes(Category,NumberofPatients,label=ProviderName,color=Category))+\n      geom_point() + \n      geom_jitter() + \n      ylab(\"# of Patients\")+\n      coord_flip()+\n      guides(color=FALSE))\ngg\n  })\n  \n  \n\n}\nshinyApp(ui = ui, server = server)\n```\n\n\n",
    "created" : 1481132610869.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3113264207",
    "id" : "7D296BC8",
    "lastKnownWriteTime" : 1481169080,
    "last_content_update" : 1481169080,
    "path" : "C:/Users/Travis/Desktop/Final Project/Test/app.R",
    "project_path" : "Test/app.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}